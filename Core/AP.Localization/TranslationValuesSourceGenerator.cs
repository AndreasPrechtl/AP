using Microsoft.CodeAnalysis;
using System.Text;

namespace AP.Localization
{
    [Generator]
    public class TranslationValuesSourceGenerator : ISourceGenerator
    {   
        public IReadOnlySet<string> Languages { get; init; } = new HashSet<string>();

        public void Execute(GeneratorExecutionContext context)
        {
            // create the classes and fill content        
            var classTemplate = """
                // <auto-generated />
                namespace AP.Localization;

                public sealed partial class TranslationValues
                {
                    public TranslationValues()
                    {
                        Translations = new Dictionary<string, Func<string>>
                        {
                            { nameof(Default), () => this.Default },
                            ${languageDictionaryEntries}
                        }
                    }

                    ${languageProperties}
                }
                """;

            var languageDictionaryEntryTemplate = "{ nameof(${languageKey}, () => this.${languageKey} },";
            var languagePropertyTemplate = """public string ${languageKey} { get; init; }""";

            var languagePropertiesBuilder = new StringBuilder();
            var languageDictionaryEntriesBuilder = new StringBuilder();


            // build dictionary entries and properties
            foreach (var language in this.Languages)
            {
                languageDictionaryEntriesBuilder.AppendLine(languageDictionaryEntryTemplate.Replace("${languageKey}", language));
                languagePropertiesBuilder.AppendLine(languagePropertyTemplate.Replace("${languageKey}", language));                
            }
            
            // remove the last ','
            languageDictionaryEntriesBuilder.Remove(languageDictionaryEntriesBuilder.Length - 2, 2);

            var classBuilder = new StringBuilder(classTemplate)
                .Replace("${languageDictionaryEntries}", languageDictionaryEntriesBuilder.ToString())
                .Replace("${languageProperties}", languagePropertiesBuilder.ToString());

            context.AddSource("TranslationValues.g.cs", classBuilder.ToString());
        }
                   
        public void Initialize(GeneratorInitializationContext context)
        {            
            // will be needed
            // flow as followed:
            // read source + fill translations dictionary
            // generate TranslationValues partial class
            // generate TranslationStore inherited classes
        }
    }
}